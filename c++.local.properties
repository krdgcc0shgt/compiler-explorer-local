# Default settings for C++
compilers=&gcc:&clang:&cross:&rvclang:&armclang64

demangler=/bin/c++filt
objdumper=/bin/objdump

externalparser=CEAsmParser
externalparser.exe=/home/rgc/u/bin/asm-parser

llvmDisassembler=/usr/bin/llvm-dis-17

###############################
# GCC for x86
group.gcc.compilers=g44:g45:g46:g47:g48:g5:g6x:g7:g8:g9:g10:g11:gdefault
group.gcc.compilerCategories=gcc
compiler.g44.exe=/usr/bin/g++-4.4
compiler.g44.name=g++ 4.4
compiler.g45.exe=/usr/bin/g++-4.5
compiler.g45.name=g++ 4.5
compiler.g46.exe=/usr/bin/g++-4.6
compiler.g46.name=g++ 4.6
compiler.g47.exe=/usr/bin/g++-4.7
compiler.g47.name=g++ 4.7
compiler.g48.exe=/usr/bin/g++-4.8
compiler.g48.name=g++ 4.8
compiler.g5.exe=/usr/bin/g++-5
compiler.g5.name=g++ 5.x
compiler.g6x.exe=/usr/bin/g++-6
compiler.g6x.name=g++ 6.x
compiler.g6x.alias=g6
compiler.g7.exe=/usr/bin/g++-7
compiler.g7.name=g++ 7.x
compiler.g8.exe=/usr/bin/g++-8
compiler.g8.name=g++ 8.x
compiler.g9.exe=/usr/bin/g++-9
compiler.g9.name=g++ 9.x
compiler.g10.exe=/usr/bin/g++-10
compiler.g10.name=g++ 10.x
compiler.g11.exe=/usr/bin/g++-11
compiler.g11.name=g++ 11.x
compiler.gdefault.exe=/usr/bin/g++
compiler.gdefault.name=g++ default

group.clang.compilers=clang7:clang8:clang9:clang10:clang11:clang12:clang17:clangdefault
group.clang.intelAsm=-mllvm --x86-asm-syntax=intel
group.clang.compilerType=clang
group.clang.compilerCategories=clang
compiler.clang7.exe=/usr/bin/clang++-7
compiler.clang7.name=clang 7
compiler.clang8.exe=/usr/bin/clang++-8
compiler.clang8.name=clang 8
compiler.clang9.exe=/usr/bin/clang++-9
compiler.clang9.name=clang 9
compiler.clang10.exe=/usr/bin/clang++-10
compiler.clang10.name=clang 10
compiler.clang11.exe=/usr/bin/clang++-11
compiler.clang11.name=clang 11
compiler.clang12.exe=/usr/bin/clang++-12
compiler.clang12.name=clang 12
compiler.clang17.exe=/usr/bin/clang++-17
compiler.clang17.name=clang 17
compiler.clangdefault.exe=/usr/bin/clang++
compiler.clangdefault.name=clang default

###############################
# Cross GCC
group.cross.compilers=&rvgcc
group.cross.supportsBinaryObject=true
group.cross.supportsBinary=true
group.cross.groupName=Cross GCC
group.cross.supportsExecute=false

###############################
# GCC for RISC-V
group.rvgcc.compilers=&rv64gcc
group.rvgcc.groupName=RISC-V GCC
group.rvgcc.isSemVer=true
group.rvgcc.supportsExecute=false
group.rvgcc.supportsBinary=true
group.rvgcc.supportsBinaryObject=true

## GCC for RISC-V 64-bits
group.rv64gcc.compilers=rv64-gcc930
group.rv64gcc.groupName=RISC-V (64-bits) gcc
group.rv64gcc.baseName=RISC-V (64-bits) gcc

compiler.rv64-gcc930.exe=/usr/bin/riscv64-unknown-elf-g++
compiler.rv64-gcc930.semver=9.3.0
compiler.rv64-gcc930.objdumper=/usr/bin/riscv64-unknown-elf-objdump

################################
# Clang for RISC-V
group.rvclang.compilers=&rv64clang
group.rvclang.supportsBinary=true
group.rvclang.supportsExecute=false
group.rvclang.isSemVer=true
group.rvclang.licenseName=LLVM Apache 2
group.rvclang.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.rvclang.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions

group.rv64clang.compilers=rv64-clang1701
group.rv64clang.options=-target riscv64-unknown-linux-gnu -march=rv64gc -mabi=lp64d
group.rv64clang.objdumper=/usr/bin/riscv64-unknown-elf-objdump
group.rv64clang.baseName=RISC-V rv64gc clang
group.rv64clang.groupName=RISC-V 64 Clang
group.rv64clang.compilerCategories=clang

compiler.rv64-clang1701.exe=/usr/bin/clang++-17
compiler.rv64-clang1701.semver=17.0.1

################################
# Clang for Arm
# Provides 64- menu items for clang-9, clang-10 and trunk
group.armclang64.groupName=Arm 64-bit clang
group.armclang64.compilers=armv8-clang1701
group.armclang64.isSemVer=true
group.armclang64.baseName=armv8-a clang
group.armclang64.compilerType=clang
group.armclang64.supportsExecute=false
group.armclang64.supportsSonar=true
group.armclang64.instructionSet=aarch64
group.armclang64.licenseName=LLVM Apache 2
group.armclang64.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.armclang64.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions
group.armclang64.compilerCategories=clang

compiler.armv8-clang1701.exe=/usr/bin/clang++-17
compiler.armv8-clang1701.semver=17.0.1
compiler.armv8-clang1701.options=-target aarch64-linux-gnu

################################
tools=clangquerydefault:clangtidydefault:clangtidy17:clangquery7:clangquery8:clangquery9:clangquery10:clangquery11:clangquery12:clangquery17:strings:ldd:readelf:nm:llvmdwarfdumpdefault:llvmdwarfdump17

tools.clangquerydefault.exe=/usr/bin/clang-query
tools.clangquerydefault.name=clang-query (default)
tools.clangquerydefault.type=independent
tools.clangquerydefault.class=clang-query-tool
tools.clangquerydefault.stdinHint=Query commands
tools.clangquerydefault.monacoStdin=true

tools.clangtidydefault.exe=/usr/bin/clang-tidy
tools.clangtidydefault.name=clang-tidy (default)
tools.clangtidydefault.type=independent
tools.clangtidydefault.class=clang-tidy-tool
tools.clangtidydefault.stdinHint=disabled

tools.clangtidy17.exe=/usr/bin/clang-tidy-17
tools.clangtidy17.name=clang-tidy 17
tools.clangtidy17.type=independent
tools.clangtidy17.class=clang-tidy-tool
tools.clangtidy17.stdinHint=disabled

tools.clangquery7.exe=/usr/bin/clang-query-7
tools.clangquery7.name=clang-query 7
tools.clangquery7.type=independent
tools.clangquery7.class=clang-query-tool
tools.clangquery7.stdinHint=Query commands

tools.clangquery8.exe=/usr/bin/clang-query-8
tools.clangquery8.name=clang-query 8
tools.clangquery8.type=independent
tools.clangquery8.class=clang-query-tool
tools.clangquery8.stdinHint=Query commands

tools.clangquery9.exe=/usr/bin/clang-query-9
tools.clangquery9.name=clang-query 9
tools.clangquery9.type=independent
tools.clangquery9.class=clang-query-tool
tools.clangquery9.stdinHint=Query commands

tools.clangquery10.exe=/usr/bin/clang-query-10
tools.clangquery10.name=clang-query 10
tools.clangquery10.type=independent
tools.clangquery10.class=clang-query-tool
tools.clangquery10.stdinHint=Query commands

tools.clangquery11.exe=/usr/bin/clang-query-11
tools.clangquery11.name=clang-query 11
tools.clangquery11.type=independent
tools.clangquery11.class=clang-query-tool
tools.clangquery11.stdinHint=Query commands

tools.clangquery12.exe=/usr/bin/clang-query-12
tools.clangquery12.name=clang-query 12
tools.clangquery12.type=independent
tools.clangquery12.class=clang-query-tool
tools.clangquery12.stdinHint=Query commands

tools.clangquery17.exe=/usr/bin/clang-query-17
tools.clangquery17.name=clang-query 17
tools.clangquery17.type=independent
tools.clangquery17.class=clang-query-tool
tools.clangquery17.stdinHint=Query commands

tools.ldd.name=ldd
tools.ldd.exe=/usr/bin/ldd
tools.ldd.type=postcompilation
tools.ldd.class=readelf-tool
tools.ldd.exclude=djggp
tools.ldd.stdinHint=disabled

tools.readelf.exe=/usr/bin/readelf
tools.readelf.name=readelf (default)
tools.readelf.type=postcompilation
tools.readelf.class=readelf-tool
tools.readelf.exclude=djggp
tools.readelf.stdinHint=disabled

tools.nm.exe=/usr/bin/nm
tools.nm.name=nm (default)
tools.nm.type=postcompilation
tools.nm.class=nm-tool
tools.nm.exclude=djggp
tools.nm.stdinHint=disabled

tools.strings.exe=/usr/bin/strings
tools.strings.name=strings
tools.strings.type=postcompilation
tools.strings.class=strings-tool
tools.strings.exclude=djggp
tools.strings.stdinHint=disabled

tools.llvmdwarfdumpdefault.exe=/usr/bin/llvm-dwarfdump
tools.llvmdwarfdumpdefault.name=llvm-dwarfdump (default)
tools.llvmdwarfdumpdefault.type=postcompilation
tools.llvmdwarfdumpdefault.class=llvm-dwarfdump-tool
tools.llvmdwarfdumpdefault.stdinHint=disabled

tools.llvmdwarfdump17.exe=/usr/bin/llvm-dwarfdump-17
tools.llvmdwarfdump17.name=llvm-dwarfdump 17
tools.llvmdwarfdump17.type=postcompilation
tools.llvmdwarfdump17.class=llvm-dwarfdump-tool
tools.llvmdwarfdump17.stdinHint=disabled

defaultCompiler=gdefault
postProcess=
demangler=c++filt
demanglerType=cpp
objdumper=objdump
#androidNdk=/opt/google/android-ndk-r9c
options=
supportsBinary=true
supportsBinaryObject=true
binaryHideFuncRe=^(__.*|_(init|start|fini)|(de)?register_tm_clones|call_gmon_start|frame_dummy|\.plt.*|_dl_relocate_static_pie)$
needsMulti=false
stubRe=\bmain\b
stubText=int main(void){return 0;/*stub provided by Compiler Explorer*/}
supportsLibraryCodeFilter=true

#################################
#################################
# Installed libs (See c++.amazon.properties for a scheme of libs group)
libs=benchmark:catch2:etl:googletest:gsl

libs.benchmark.name=Google Benchmark
libs.benchmark.versions=trunk
libs.benchmark.url=https://github.com/google/benchmark
libs.benchmark.staticliblink=benchmark
libs.benchmark.versions.trunk.version=trunk
libs.benchmark.versions.trunk.path=/home/rgc/u/include
libs.benchmark.versions.trunk.libpath=/home/rgc/u/lib

libs.googletest.name=Google Test
libs.googletest.versions=trunk
libs.googletest.url=https://github.com/google/googletest
libs.googletest.staticliblink=gtest:gmock:pthread
libs.googletest.versions.trunk.version=trunk
libs.googletest.versions.trunk.path=/home/rgc/u/include
libs.googletest.versions.trunk.libpath=/home/rgc/u/lib

libs.catch2.name=Catch2
libs.catch2.description=Catch2
libs.catch2.url=https://github.com/catchorg/Catch2
libs.catch2.versions=trunk
libs.catch2.versions.trunk.version=trunk
libs.catch2.versions.trunk.path=/home/rgc/u/include
libs.catch2.versions.trunk.libpath=/home/rgc/u/lib
libs.catch2.versions.trunk.staticliblink=Catch2

libs.gsl.name=GSL
libs.gsl.description=Guidelines Support Library
libs.gsl.url=https://github.com/Microsoft/GSL
libs.gsl.versions=trunk:lite
libs.gsl.versions.trunk.version=trunk
libs.gsl.versions.trunk.path=/home/rgc/u/include
libs.gsl.versions.lite.version=lite
libs.gsl.versions.lite.path=/home/rgc/u/include

libs.etl.name=etl
libs.etl.description=Embedded Template Library
libs.etl.url=https://github.com/ETLCPP/etl
libs.etl.versions=trunk
libs.etl.versions.trunk.version=trunk
libs.etl.versions.trunk.path=/home/rgc/u/include
