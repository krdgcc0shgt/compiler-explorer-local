# Default settings for C
compilers=&gcc:&clang:&ccross:&rvcclang:&armcclang64
defaultCompiler=cgdefault
demangler=c++filt
objdumper=objdump
postProcess=
supportsBinary=true
supportsBinaryObject=true
binaryHideFuncRe=^(__.*|_(init|start|fini)|(de)?register_tm_clones|call_gmon_start|frame_dummy|\.plt.*)$
stubRe=\bmain\b
stubText=int main(void){return 0;/*stub provided by Compiler Explorer*/}
supportsLibraryCodeFilter=true

externalparser=CEAsmParser
externalparser.exe=/home/rgc/u/bin/asm-parser

llvmDisassembler=/usr/bin/llvm-dis-17

###############################
# GCC for x86
group.gcc.compilers=cg44:cg45:cg46:cg47:cg48:cg5:cg6x:cg7:cg8:cg9:cg10:cg11:cgdefault
compiler.cg44.exe=/usr/bin/gcc-4.4
compiler.cg44.name=gcc 4.4
compiler.cg45.exe=/usr/bin/gcc-4.5
compiler.cg45.name=gcc 4.5
compiler.cg46.exe=/usr/bin/gcc-4.6
compiler.cg46.name=gcc 4.6
compiler.cg47.exe=/usr/bin/gcc-4.7
compiler.cg47.name=gcc 4.7
compiler.cg48.exe=/usr/bin/gcc-4.8
compiler.cg48.name=gcc 4.8
compiler.cg5.exe=/usr/bin/gcc-5
compiler.cg5.name=gcc 5.x
compiler.cg6x.exe=/usr/bin/gcc-6
compiler.cg6x.name=gcc 6.x
compiler.cg6x.alias=cg6
compiler.cg7.exe=/usr/bin/gcc-7
compiler.cg7.name=gcc 7.x
compiler.cg8.exe=/usr/bin/gcc-8
compiler.cg8.name=gcc 8.x
compiler.cg9.exe=/usr/bin/gcc-9
compiler.cg9.name=gcc 9.x
compiler.cg10.exe=/usr/bin/gcc-10
compiler.cg10.name=gcc 10.x
compiler.cg11.exe=/usr/bin/gcc-11
compiler.cg11.name=gcc 11.x
compiler.cgdefault.exe=/usr/bin/gcc
compiler.cgdefault.name=gcc default

group.clang.compilers=cclang7:cclang8:cclang9:cclang10:cclang11:cclang12:cclang17:cclangdefault:cclangccdefault
group.clang.intelAsm=-mllvm --x86-asm-syntax=intel
compiler.cclang7.exe=/usr/bin/clang-7
compiler.cclang7.name=clang 7
compiler.cclang8.exe=/usr/bin/clang-8
compiler.cclang8.name=clang 8
compiler.cclang9.exe=/usr/bin/clang-9
compiler.cclang9.name=clang 9
compiler.cclang10.exe=/usr/bin/clang-10
compiler.cclang10.name=clang 10
compiler.cclang11.exe=/usr/bin/clang-11
compiler.cclang11.name=clang 11
compiler.cclang12.exe=/usr/bin/clang-12
compiler.cclang12.name=clang 12
compiler.cclang17.exe=/usr/bin/clang-17
compiler.cclang17.name=clang 17
compiler.cclangdefault.exe=/usr/bin/clang
compiler.cclangdefault.name=clang default
compiler.cclangccdefault.exe=/usr/bin/clangcc
compiler.cclangccdefault.name=clang default

###############################
# Cross Compilers (mostly GCC & Clang)
group.ccross.compilers=&rvcgcc

###############################
# GCC for RISC-V
group.rvcgcc.compilers=&rv64-cgccs:&rv32-cgccs
group.rvcgcc.groupName=RISC-V GCC
group.rvcgcc.isSemVer=true
group.rvcgcc.supportsExecute=false
group.rvcgcc.supportsBinary=true
group.rvcgcc.supportsBinaryObject=true

################################
## GCC for RISC-V 64-bits
group.rv64-cgccs.compilers=rv64-cgcc930
group.rv64-cgccs.groupName=RISC-V (64-bits) gcc
group.rv64-cgccs.baseName=RISC-V (64-bits) gcc

compiler.rv64-cgcc930.exe=/usr/bin/riscv64-unknown-elf-gcc-9.3.0
compiler.rv64-cgcc930.semver=9.3.0
compiler.rv64-cgcc930.objdumper=/usr/bin/riscv64-unknown-elf-objdump

################################
# Clang for RISC-V
group.rvcclang.compilers=&rv64cclang
group.rvcclang.supportsBinary=true
group.rvcclang.supportsBinaryObject=true
group.rvcclang.supportsExecute=false
group.rvcclang.isSemVer=true
group.rvcclang.licenseName=LLVM Apache 2
group.rvcclang.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.rvcclang.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions
group.rvcclang.compilerCategories=clang

group.rv64cclang.compilers=rv64-cclang1701
group.rv64cclang.options=-target riscv64-unknown-linux-gnu -march=rv64gc -mabi=lp64d
group.rv64cclang.objdumper=/usr/bin/riscv64-unknown-elf-objdump
group.rv64cclang.baseName=RISC-V rv64gc clang
group.rv64cclang.groupName=RISC-V 64 Clang
group.rv64cclang.compilerCategories=clang

compiler.rv64-cclang1701.exe=/usr/bin/clang-17
compiler.rv64-cclang1701.semver=17.0.1

group.armcclang64.groupName=Arm 64-bit clang
group.armcclang64.compilers=armv8-cclang1701
group.armcclang64.isSemVer=true
group.armcclang64.compilerType=clang
group.armcclang64.supportsExecute=false
group.armcclang64.instructionSet=aarch64
group.armcclang64.licenseName=LLVM Apache 2
group.armcclang64.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.armcclang64.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions
group.armcclang64.compilerCategories=clang

compiler.armv8-cclang1701.name=armv8-a clang 17.0.1
compiler.armv8-cclang1701.exe=/usr/bin/clang-17
compiler.armv8-cclang1701.semver=17.0.1
# Arm v8-a
compiler.armv8-cclang1701.options=-target aarch64-linux-gnu

################################
tools=clangquerydefault:clangquery17:clangtidydefault:clangtidy17:readelf:nm:llvmdwarfdumpdefault:llvmdwarfdump17

tools.clangquerydefault.exe=/usr/bin/clang-query
tools.clangquerydefault.name=clang-query (default)
tools.clangquerydefault.type=independent
tools.clangquerydefault.class=clang-query-tool
tools.clangquerydefault.stdinHint=Query commands
tools.clangquerydefault.monacoStdin=true

tools.clangquery17.exe=/usr/bin/clang-query-17
tools.clangquery17.name=clang-query 17
tools.clangquery17.type=independent
tools.clangquery17.class=clang-query-tool
tools.clangquery17.stdinHint=Query commands

tools.clangtidydefault.exe=/usr/bin/clang-tidy
tools.clangtidydefault.name=clang-tidy (default)
tools.clangtidydefault.type=independent
tools.clangtidydefault.class=clang-tidy-tool
tools.clangtidydefault.stdinHint=disabled

tools.clangtidy17.exe=/usr/bin/clang-tidy-17
tools.clangtidy17.name=clang-tidy 17
tools.clangtidy17.type=independent
tools.clangtidy17.class=clang-tidy-tool
tools.clangtidy17.stdinHint=disabled

tools.readelf.exe=/usr/bin/readelf
tools.readelf.name=readelf (default)
tools.readelf.type=postcompilation
tools.readelf.class=readelf-tool
tools.readelf.exclude=djggp
tools.readelf.stdinHint=disabled

tools.nm.exe=/usr/bin/nm
tools.nm.name=nm (default)
tools.nm.type=postcompilation
tools.nm.class=nm-tool
tools.nm.exclude=djggp
tools.nm.stdinHint=disabled

tools.llvmdwarfdumpdefault.exe=/usr/bin/llvm-dwarfdump
tools.llvmdwarfdumpdefault.name=llvm-dwarfdump (default)
tools.llvmdwarfdumpdefault.type=postcompilation
tools.llvmdwarfdumpdefault.class=llvm-dwarfdump-tool
tools.llvmdwarfdumpdefault.stdinHint=disabled

tools.llvmdwarfdump17.exe=/usr/bin/llvm-dwarfdump-17
tools.llvmdwarfdump17.name=llvm-dwarfdump 17
tools.llvmdwarfdump17.type=postcompilation
tools.llvmdwarfdump17.class=llvm-dwarfdump-tool
tools.llvmdwarfdump17.stdinHint=disabled

